// <auto-generated />
using System;
using ClockIn.Server.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClockIn.Server.EF.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20240813185838_forth")]
    partial class forth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClockIn.Server.Models.ClockInDayInfo", b =>
                {
                    b.Property<int>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("record_day_id");

                    b.Property<int>("record_code_totall")
                        .HasColumnType("int")
                        .HasColumnName("record_code_totall");

                    b.Property<DateTime>("record_date_day")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date_day");

                    b.Property<int>("user_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("record_id");

                    b.ToTable("sys_clockin_day");
                });

            modelBuilder.Entity("ClockIn.Server.Models.ClockInInfo", b =>
                {
                    b.Property<int>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<int>("record_code")
                        .HasColumnType("int")
                        .HasColumnName("record_code");

                    b.Property<DateTime>("record_date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("record_date");

                    b.Property<int>("user_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("record_id");

                    b.ToTable("sys_clockin");
                });

            modelBuilder.Entity("ClockIn.Server.Models.LeaveCheckInfo", b =>
                {
                    b.Property<int>("leave_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("leave_id");

                    b.Property<sbyte>("_status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<string>("approval_by")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("approval_by");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("end_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_at");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("reason");

                    b.Property<DateTime>("start_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_at");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int>("user_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("leave_id");

                    b.ToTable("sys_leave");
                });

            modelBuilder.Entity("ClockIn.Server.Models.MenuInfo", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.Property<string>("MenuHeader")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("menu_header");

                    b.Property<string>("MenuIcon")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("menu_icon");

                    b.Property<bool>("MenuType")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("menu_type");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<string>("targetView")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("target_view");

                    b.HasKey("MenuId");

                    b.ToTable("menus");
                });

            modelBuilder.Entity("ClockIn.Server.Models.SysUserInfo", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<bool>("is_admin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_admin");

                    b.Property<string>("user_ip_address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_ip_address");

                    b.Property<string>("user_login_name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_login_name");

                    b.Property<string>("user_mac")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_mac");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_name");

                    b.Property<string>("user_pwd")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_pwd");

                    b.Property<string>("user_role")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_role");

                    b.HasKey("user_id");

                    b.ToTable("sys_user_info");
                });
#pragma warning restore 612, 618
        }
    }
}
